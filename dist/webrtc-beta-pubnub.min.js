/*! webrtc-beta-pubnub - v0.0.1 - 2013-06-14
* Copyright (c) 2013 ; Licensed  */
!function(a,b){"use strict";function c(a){console.error(a)}function d(){h===!0&&console.log.apply(console,arguments)}function e(a,b){for(var c in b)a[c]=b[c];return a}function f(){var a="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=0|16*Math.random(),c="x"==a?b:8|3&b;return c.toString(16)});return a}function g(a,b){function f(a,b,c){this.selfUuid=b,this.otherUuid=c,this.send=function(e){e.uuid=b,e=JSON.stringify(e),d("Sending",e,c),a.publish({channel:k+c,message:e})}}function g(b){if(b=JSON.parse(b),d("Got message",b),null!=b.uuid){var c=null!=l[b.uuid];0==c&&a.createP2PConnection(b.uuid,!1);var e=l[b.uuid];if(null!=b.sdp){e.connection.setRemoteDescription(new RTCSessionDescription(b.sdp));for(var f=0;f<e.candidates;f++)e.connection.addIceCandidate(new RTCIceCandidate(e.candidates[f])),e.candidates=[];0==c&&e.connection.createAnswer(function(b){a.gotDescription(b,e)})}else null!=e.connection.remoteDescription&&"connected"!==e.connection.iceConnectionState?e.connection.addIceCandidate(new RTCIceCandidate(b.candidate)):e.candidates.push(b.candidate)}}function h(a,b){d("Sending message",b),b.type==p.STREAM?a.connection.addStream(b.stream):b.type==p.MESSAGE?a.dataChannel.send(b.message):c("Unrecognized RTC message type: "+b.type)}var j={},k="pn_",l={},m=null,n=b,o={},p={STREAM:1,MESSAGE:2};return a.UUID=b,d("Subscribing to personal channel"),a.subscribe({channel:k+b,connect:function(){a.history({count:1e3,channel:k+b,callback:function(a){d("History:",a);for(var b=a[0],c=0;c<b.length;c++)g(b[c])}})},callback:g}),j.gotDescription=function(a,b){b.connection.setLocalDescription(a),d("Sending description",b.signalingChannel),b.signalingChannel.send({sdp:a})},j.createP2PConnection=function(a,b){function c(b){l[a].dataChannel=b.channel,l[a].dataChannel.onmessage=function(b){d("Got data channel message",b.data),l[a].callback&&l[a].callback(b.data,b)},b.channel.onopen=function(b){d("Connection state changed",b),l[a].connected=!0,h._peerPublish(a)}}if(null==l[a]){var e=new i(m,{optional:[{RtpDataChannels:!0}]}),g=new f(this,n,a),h=this;if(e.ondatachannel=c,e.onicecandidate=function(a){null!=a.candidate&&g.send({candidate:a.candidate})},e.oniceconnectionstatechange=function(){"connected"==e.iceConnectionState},o[a]=[],l[a]={stream:null,callback:null,connection:e,candidates:[],connected:!1,signalingChannel:g},0!=b){var h=this,j=e.createDataChannel("pubnub",{reliable:!1});c({channel:j}),e.createOffer(function(b){d("Description",b),h.gotDescription(b,l[a])})}}else d("Trying to connect to already connected user: "+a)},j._peerPublish=function(a){o[a]&&o[a].length>0&&(d("Connected status",l[a].connected),1==l[a].connected&&(h(l[a],o[a].shift()),this._peerPublish(a)))},j.publish=function(a){return function(b){null==b&&c("You must send an object when using PUBNUB.publish!"),null!=b.user?(null!=b.stream?o[b.user].push({type:p.STREAM,stream:b.stream}):null!=b.message?o[b.user].push({type:p.MESSAGE,message:b.message}):c("Stream or message key not found in argument object. One or the other must be provided for RTC publish calls!"),this._peerPublish(b.user)):a.apply(this,arguments)}}(a.publish),j.subscribe=function(a){return function(b){if(null==b&&c("You must send an object when using PUBNUB.subscribe!"),null!=b.user){var e=l[b.user];d(l,b.user,e),b.stream&&(e.stream=b.stream,e.connection.onaddstream=function(a){e.stream&&e.stream(a.stream,a)}),b.callback&&(e.callback=b.callback)}else a.apply(this,arguments)}}(a.subscribe),e(a,j)}var h=!0,i=a.webkitRTCPeerConnection||a.mozRTCPeerConnection||i;b.init=function(a){return function(b){var c=b.uuid||f();b.uuid=c,d(b);var e=a.call(this,b);return e=g(e,c)}}(b.init)}(window,PUBNUB);